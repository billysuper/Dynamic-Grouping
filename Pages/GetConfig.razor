@page "/getconfig"

<PageTitle>Get Configuration</PageTitle>

@using Newtonsoft.Json;
@using Dynamic_Grouping.Data
@using Dynamic_Grouping.Data.Service
@inject GetCfgService GetCfg  
@inject PostCfgService PostCfg
@inject DeleteCfgService DeleteCfg
@inject VlanOperation VO

<h1>Network Configuration</h1>
<button class="btn btn-primary" @onclick="Delete">Delete</button><b></b>
<button class="btn btn-primary" @onclick="Get">Get</button>
<button class="btn btn-primary" @onclick="Post">Post</button><b></b>

<p>@PostCfg.result</p>
@if (GetCfg.GetJson==null)
{
    <p><em>Loading...</em></p>
}
else
{
//interfaces
<table class="table">
    <thead>
        <tr>
            <th>Port</th>
            <th>Interface</th>
            <th>Vlan</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var kvp in data.ports)
        {
            foreach (Interfaces iface in kvp.Value.interfaces)
            {
                <tr>
                    <td>@kvp.Key</td>
                    <td>@iface.name</td>
                    <td>
                            <input type="text" @bind="@InputValues[iface.name]"/>
                    </td>
                </tr>

            }
                
        }
    </tbody>

</table>
//vlan
<table class="table">
    <thead>
        <tr>
            <th>Vlan</th>
            <th>Interface</th>
        </tr>
    </thead>
    <tbody>
            @foreach (var vlan in data.apps.orgonosprojectvpls.vpls.vplsList)
            {
                    foreach (var iface in vlan.interfaces)
                    {
                        <tr>
                            <td>@vlan.name</td>
                            <td>@iface</td>
                        </tr>
                    }
            }
    </tbody>
</table>
}
<p>@PostCfg.serializedJson</p>

@code {
    private string test;
    RootObject data;
    private Dictionary<string, string> InputValues { get; set; } = new Dictionary<string, string>();

    protected override async Task OnInitializedAsync()
    {
        GetCfg.GetJson();
        data = JsonConvert.DeserializeObject<RootObject>(GetCfg.JsonData);
        InputValues=VO.getVlanCfg(data,InputValues);
    }
    private void Delete()
    {
        DeleteCfg.DeleteJson();    
    }
    private void Get()
    {
        GetCfg.GetJson();
        data = JsonConvert.DeserializeObject<RootObject>(GetCfg.JsonData);
        //get vlan
        InputValues = VO.getVlanCfg(data, InputValues);
    }
    private void Post()
    {
        //modify vlan configuration
         RootObject Vpls = VO.setVlanCfg(data,InputValues);
        //post to onos
        PostCfg.PostJson(Vpls);
    }
}