@page "/hosts"

<PageTitle>作戰裝置</PageTitle>

@using Dynamic_Grouping.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@inject SharedDataService shareData

<h1>作戰裝置</h1>
<div class="row align-items-center">
    <label class="col-sm-1 col-form-label">Status:</label>
    <div class="col-sm-2">
        <div>@shareData.Data</div>
    </div>
</div><p></p>
@if ( shareData.getCfgService.hostsData==null)
{
    <p><em>Loading...</em></p>
}
else
{
//interfaces
<table class="table">
    <thead>
        <tr>
            <th>裝置名稱</th>
            <th>類別</th>
            <th>Mac</th>
            <th>網路端口</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var host in shareData.getCfgService.hostsData.Hosts)
        {
            <tr>
                <td>
                    <input type="text" @bind="@host.iface" @onclick = "OnInputClicked"/>
                </td>
                @foreach (var newhost in shareData.getCfgService.hostVlan.Hosts)
                {
                    if (host.devicePort == newhost.devicePort)
                    {
                        <td>
                            <select @bind="newhost.militaryPower">
                                @foreach (var power in shareData.militaryPowers)
                                {
                                    <option value="@power" selected="@(power == newhost.militaryPower)">@power</option>
                                }
                            </select>
                        </td>
                    }
                }
                <td>@host.Mac</td>
                <td>@host.devicePort</td>
            </tr>
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="Update">更改</button>
}
@code {

    protected override async Task OnInitializedAsync()
    {
        //background
        await base.OnInitializedAsync();
        shareData.OnDataUpdated += UpdateUI;
        shareData.getCfgService.hostVlan = shareData.getCfgService.hostsData;

    }
    //background
    private async Task UpdateUI()
    {
        await InvokeAsync(StateHasChanged);
    }
    //background
    public void Dispose()
    {
        shareData.OnDataUpdated -= UpdateUI;
    }
    private void Update()
    {
        while (!shareData.isfinish) ;//wait background program
        foreach (var host in shareData.getCfgService.hostsData.Hosts)
        {
            foreach (var newhost in shareData.getCfgService.hostVlan.Hosts)
            {
                if(host.devicePort == newhost.devicePort)
                {
                    host.militaryPower = newhost.militaryPower;
                }
            }
        }
    }
    private void OnInputClicked()
    {
        
    }
}